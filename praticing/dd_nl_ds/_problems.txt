 • C++ STL map (and Java TreeMap)

1. UVa 00417 - Word Index (generate all words, add to map for auto sorting)
2. UVa 00484 - The Department of Redundancy Department (maintain frequency with map)
3. UVa 00860 - Entropy Text Analyzer (frequency counting)
4. UVa 00939 - Genes (map child name to his/her gene and parents’ names)
5. UVa 10132 - File Fragmentation (N = number of fragments, B = total bits of
all fragments divided by N/2; try all 2×N2 concatenations of two fragments
that have length B; report the one with highest frequency; use map)
6. UVa 10138 - CDVII (map plates to bills, entrace time and position)
7. UVa 10226 - Hardwood Species * (use hashing for a better performance)
8. UVa 10282 - Babelfish (a pure dictionary problem; use map)
9. UVa 10295 - Hay Points (use map to deal with Hay Points dictionary)
10. UVa 10686 - SQF Problem (use map to manage the data)
11. UVa 11239 - Open Source (use map and set to check previous strings)
12. UVa 11286 - Conformity * (use map to keep track of the frequencies)
13. UVa 11308 - Bankrupt Baker (use map and set to help manage the data)
14. UVa 11348 - Exhibition (use map and set to check uniqueness)
15. UVa 11572 - Unique Snowflakes * (use map to record the occurrence index of a certain snowflake size; use this to determine the answer in O(n log n))
16. UVa 11629 - Ballot evaluation (use map)
17. UVa 11860 - Document Analyzer (use set and map, linear scan)
18. UVa 11917 - Do Your Own Homework (use map)
19. UVa 12504 - Updating a Dictionary (use map; string to string; a bit tedious)
20. UVa 12592 - Slogan Learning of Princess (use map; string to string)
Also check frequency counting section in Section 6.3.


 • C++ STL set (Java TreeSet)

1. UVa 00501 - Black Box (use multiset with efficient iterator manipulation)
2. UVa 00978 - Lemmings Battle * (simulation, use multiset)
3. UVa 10815 - Andy’s First Dictionary (use set and string)
4. UVa 11062 - Andy’s Second Dictionary (similar to UVa 10815, with twists)
5. UVa 11136 - Hoax or what * (use multiset)
6. UVa 11849 - CD * (use set to pass the time limit, better: use hashing!)
7. UVa 12049 - Just Prune The List (multiset manipulation)


 • C++ STL priority queue (Java PriorityQueue)

1. UVa 01203 - Argus * (LA 3135, Beijing04; use priority queue)
2. UVa 10954 - Add All * (use priority queue, greedy)
3. UVa 11995 - I Can Guess ... * (stack, queue, and priority queue)
Also see the usage of priority queue for topological sorts (see Section 4.2.1),
Kruskal’s19 (see Section 4.3.2), Prim’s (see Section 4.3.3), Dijkstra’s (see
Section 4.4.3), and the A* Search algorithms (see Section 8.2.5)